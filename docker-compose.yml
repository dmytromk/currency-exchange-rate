services:
  database:
    container_name: database
    image: 'docker.io/postgres:latest'
    env_file:
      - .env
    ports:
      - 15432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    container_name: migration
    image: migrate/migrate
    env_file:
      - .env
    volumes:
      - ./migrations:/migrations
    entrypoint: [
                  "migrate",
                  "-path",
                  "/migrations",
                  "-database",
                  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?sslmode=disable"]
    command: ["up"]
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./cmd/api-server/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      database:
        condition: service_healthy

  scheduler:
    container_name: scheduler
    build:
      context: .
      dockerfile: ./cmd/email-scheduler/Dockerfile
    ports:
      - 3001:3000
    depends_on:
      database:
        condition: service_healthy